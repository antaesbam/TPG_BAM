#!/bin/bash
# List files in the current folder
# for each file, count lines and count ingested records
# send results in a new monitoring index
# WARNING: to use this script, jq must be installed on the system

count_lines() {
    local f=$1
    # this is the return value, i.e. non local
    lines_in_files=`wc -l $f | sed 's/^\([0-9]*\).*$/\1/'`
}

# gather from file : as_of & as_of_time 
parse_file_name() {
    local f=`basename "${1}"`
    echo 'BASENAME:' $f
    as_of=`echo $f | cut -c 1-10`
    as_of_time=`echo $f | cut -c 12-19`
}

check_ingested() {
        qr=$(set -x; curl --user $src_platform_user $src_platform_url/$src_index*/_count -d "{ \"query\": {\"bool\": {  \"filter\": [ {\"match\": { \"as_of_time\": \"$as_of_time\"}}, {\"match\": { \"as_of\": \"$as_of\"}} ] } }}" -H"Content-Type: application/json" | jq -r ".count")
}

post_to_monitoring_index() {
        # we set the date before posting
        date=`date "+%Y-%m-%dT%H:%M:%S"`

        index_post_response=$(set -x; curl -XPOST -H"Content-Type: application/json" --user $monitoring_platform_user $monitoring_platform_url/$monitoring_index/$record_type -d "{ \"provider\": \"$provider\", \"date\": \"$date\", \"index\": \"$index\",\"file\": \"$f\",\"as_of\": \"$as_of\", \"as_of_time\": \"$as_of_time\", \"num_in_file\": $lines_in_files, \"num_in_index\": $qr}")

}

# monitored platform
src_index='tpgbam_{{ depenvironment }}_{{ data_provider }}'
src_platform_url='https://{{ target_url }}'
src_platform_user='{{ target_user }}:{{ target_password }}'

# monitoring platform
monitoring_platform_url='https://{{ monitoring_url }}'
monitoring_platform_user='{{ monitoring_user }}:{{ monitoring_password }}'

# count lines in files
lines_in_files=0

# count records in index
qr=''

# define folder to monitor
target_folder='/home/{{ data_provider }}/publish'

as_of=''
as_of_time=''
date=''
monitoring_index='monitoring_ingester_{{ data_provider }}'
record_type='record_count'
provider='{{ data_provider }}'
index_post_response=''


# infinit loop : restart every 5 seconds 
while : 
do
        for f in $target_folder/*.csv
        do
                count_lines $f
                lines_in_files=$((lines_in_files - 1)) 
                echo $f $lines_in_files
                parse_file_name $f

                echo $f $as_of

                echo $f $as_of_time

                check_ingested
                echo $f $qr;

                # get the current date
                date=`date "+%Y-%m-%dT%H:%M:%S"`
                echo $date 
                post_to_monitoring_index
                echo $index_post_response       
        done
echo "sleep 60"
echo "-----------------------------"
sleep 60 
done

